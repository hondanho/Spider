// <auto-generated />
using System;
using DotnetCrawler.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotnetCrawler.Data.Migrations
{
    [DbContext(typeof(MicrosofteShopOnWebCatalogDbContext))]
    [Migration("20230327074030_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalog_brand_hilo", "'catalog_brand_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_hilo", "'catalog_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_type_hilo", "'catalog_type_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotnetCrawler.Data.Models.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasketId");

                    b.Property<int>("CatalogItemId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItem");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.Baskets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerId");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CatalogBrandId");

                    b.Property<int>("CatalogTypeId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PictureUri");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.CatalogBrand", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogBrand");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.CatalogType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogType");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemOrderedCatalogItemId")
                        .HasColumnName("ItemOrdered_CatalogItemId");

                    b.Property<string>("ItemOrderedPictureUri")
                        .HasColumnName("ItemOrdered_PictureUri");

                    b.Property<string>("ItemOrderedProductName")
                        .IsRequired()
                        .HasColumnName("ItemOrdered_ProductName")
                        .HasMaxLength(50);

                    b.Property<int?>("OrderId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Units");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerId");

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<string>("ShipToAddressCity")
                        .IsRequired()
                        .HasColumnName("ShipToAddress_City")
                        .HasMaxLength(100);

                    b.Property<string>("ShipToAddressCountry")
                        .IsRequired()
                        .HasColumnName("ShipToAddress_Country")
                        .HasMaxLength(90);

                    b.Property<string>("ShipToAddressState")
                        .HasColumnName("ShipToAddress_State")
                        .HasMaxLength(60);

                    b.Property<string>("ShipToAddressStreet")
                        .IsRequired()
                        .HasColumnName("ShipToAddress_Street")
                        .HasMaxLength(180);

                    b.Property<string>("ShipToAddressZipCode")
                        .IsRequired()
                        .HasColumnName("ShipToAddress_ZipCode")
                        .HasMaxLength(18);

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.BasketItem", b =>
                {
                    b.HasOne("DotnetCrawler.Data.Models.Baskets", "Basket")
                        .WithMany("BasketItem")
                        .HasForeignKey("BasketId");
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.Catalog", b =>
                {
                    b.HasOne("DotnetCrawler.Data.Models.CatalogBrand", "CatalogBrand")
                        .WithMany("Catalog")
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DotnetCrawler.Data.Models.CatalogType", "CatalogType")
                        .WithMany("Catalog")
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotnetCrawler.Data.Models.OrderItems", b =>
                {
                    b.HasOne("DotnetCrawler.Data.Models.Orders", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
